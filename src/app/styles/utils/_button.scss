@import './colors';
@import './typography';

$button-padding-map: (
  "xlarge": 2rem 3rem,
  "large": 1.5rem 3rem,
  "medium": 1rem 2rem,
  "small": 0.5rem 2rem,
  "tiny": 0
);

$button-border-width: (
  "xlarge": 2px,
  "large": 2px,
  "medium": 1px,
  "small": 1px,
);

$button-border-color: (
  "primary": $fx-orange,
  "secondary": $fx-orange,
  "tertiary": $gray-75,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-border-hover-color: (
  "primary": $fx-orange-hover,
  "secondary": $fx-orange,
  "tertiary": $fx-orange,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-border-focus-color: (
  "primary": $fx-orange,
  "secondary": $fx-orange,
  "tertiary": $gray-75,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-border-active-color: (
  "primary": $fx-orange-pressed,
  "secondary": $fx-orange-pressed,
  "tertiary": $fx-orange,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-text-color: (
  "primary": $white,
  "secondary": $fx-orange,
  "tertiary": $gray-28,
  "text": $fx-blue,
  "text-light": $white-80,
  "text-disabled": $gray-85,
  "text-tiny": $gray-28,
  "disabled": $white
);

$button-text-hover-color: (
  "primary": $white,
  "secondary": $fx-orange,
  "tertiary": $fx-orange,
  "text": $fx-blue-hover,
  "text-light": $white-90,
  "text-disabled": $gray-85,
  "text-tiny": $fx-blue-hover,
  "disabled": $white
);

$button-text-focus-color: (
  "primary": $white,
  "secondary": $fx-orange,
  "tertiary": $gray-28,
  "text": $fx-blue,
  "text-light": $white,
  "text-disabled": $gray-85,
  "text-tiny": $fx-blue-focus,
  "disabled": $white
);

$button-text-active-color: (
  "primary": $white,
  "secondary": $fx-orange-pressed,
  "tertiary": $fx-orange,
  "text": $fx-blue-pressed,
  "text-light": $white,
  "text-disabled": $gray-85,
  "text-tiny": $gray-28,
  "disabled": $white
);

$button-background-color: (
  "primary": $fx-orange,
  "secondary": $white,
  "tertiary": $white,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-background-hover-color: (
  "primary": $fx-orange-hover,
  "secondary": $fx-white-hover,
  "tertiary": $white,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-background-focus-color: (
  "primary": $fx-orange,
  "secondary": $white,
  "tertiary": $white,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-background-active-color: (
  "primary": $fx-orange-pressed,
  "secondary": $fx-white-pressed,
  "tertiary": $fx-white-pressed,
  "text": transparent,
  "text-light": transparent,
  "text-disabled": transparent,
  "text-tiny": transparent,
  "disabled": $gray-90
);

$button-min-width: (
  "xlarge": 25rem,
  "large": 25rem,
  "medium": 20rem,
  "small": 20rem,
  "tiny": 5rem
);

@mixin button-base() {
  @include text-level("body");
  margin: 0;
  font-family: 'Roboto', sans-serif;
  font-weight: 700;
  text-transform: uppercase;
  -webkit-appearance: none;
  -moz-appearance: none;
  cursor: pointer;
  border: 0;
  background-color: transparent;
  letter-spacing: 1px;
  white-space: nowrap;

  border: map-get($button-border-width, "large") solid map-get($button-border-color, "secondary");
  background-color: map-get($button-background-color, "secondary");
  color: map-get($button-text-color, "secondary");

  &:hover {
    border-color: map-get($button-border-hover-color, "secondary");
    color: map-get($button-text-hover-color, "secondary");
    background-color: map-get($button-background-hover-color, "secondary");
  }

  &:focus {
    border-color: map-get($button-border-focus-color, "secondary");
    color: map-get($button-text-focus-color, "secondary");
    background-color: map-get($button-background-focus-color, "secondary");
  }

  &:active {
    border-color: map-get($button-border-active-color, "secondary");
    color: map-get($button-text-active-color, "secondary");
    background-color: map-get($button-background-active-color, "secondary");
  }
}

@mixin button-size($size: "large") {
  padding: map-get($button-padding-map, $size);
  border-width: map-get($button-border-width, $size);

  @if $size == "medium" or $size == "small" {
    font-size: 1.75rem;
  }
}

@mixin button-disabled() {
  border-color: map-get($button-border-color, "disabled");
  color: map-get($button-text-color, "disabled");
  background-color: map-get($button-background-color, "disabled");
  cursor: default;
  pointer-events: none;
}

@mixin button-primary() {
  background-color: map-get($button-background-color, "primary");
  color: map-get($button-text-color, "primary");
  border-color: map-get($button-border-color, "primary");

  &:hover {
    background-color: map-get($button-background-hover-color, "primary");
    color: map-get($button-text-hover-color, "primary");
    border-color: map-get($button-border-hover-color, "primary");
  }

  &:focus {
    background-color: map-get($button-background-focus-color, "primary");
    color: map-get($button-text-focus-color, "primary");
    border-color: map-get($button-border-focus-color, "primary");
  }

  &:active {
    background-color: map-get($button-background-active-color, "primary");
    color: map-get($button-text-active-color, "primary");
    border-color: map-get($button-border-active-color, "primary");
  }
}

@mixin button-tertiary() {
  background-color: map-get($button-background-color, "tertiary");
  color: map-get($button-text-color, "tertiary");
  border-color: map-get($button-border-color, "tertiary");

  &:hover {
    background-color: map-get($button-background-hover-color, "tertiary");
    color: map-get($button-text-hover-color, "tertiary");
    border-color: map-get($button-border-hover-color, "tertiary");
  }

  &:focus {
    background-color: map-get($button-background-focus-color, "tertiary");
    color: map-get($button-text-focus-color, "tertiary");
    border-color: map-get($button-border-focus-color, "tertiary");
  }

  &:active {
    background-color: map-get($button-background-active-color, "tertiary");
    color: map-get($button-text-active-color, "tertiary");
    border-color: map-get($button-border-active-color, "tertiary");
  }
}

@mixin button-text($type: "text") {
  background-color: map-get($button-background-color, $type);
  color: map-get($button-text-color, $type);
  border-color: map-get($button-border-color, $type);
  box-shadow: none;

  &:hover {
    background-color: map-get($button-background-hover-color, $type);
    color: map-get($button-text-hover-color, $type);
    border-color: map-get($button-border-hover-color, $type);
  }

  &:focus {
    background-color: map-get($button-background-focus-color, $type);
    color: map-get($button-text-focus-color, $type);
    border-color: map-get($button-border-focus-color, $type);
  }

  &:active {
    background-color: map-get($button-background-active-color, $type);
    color: map-get($button-text-active-color, $type);
    border-color: map-get($button-border-active-color, $type);
  }
}

@mixin button-text-disabled() {
  background-color: map-get($button-background-color, "text-disabled");
  color: map-get($button-text-color, "text-disabled");
  border-color: map-get($button-border-color, "text-disabled");
  box-shadow: none;

  &:hover {
    background-color: map-get($button-background-hover-color, "text-disabled");
    color: map-get($button-text-hover-color, "text-disabled");
    border-color: map-get($button-border-hover-color, "text-disabled");
  }

  &:focus {
    background-color: map-get($button-background-focus-color, "text-disabled");
    color: map-get($button-text-focus-color, "text-disabled");
    border-color: map-get($button-border-focus-color, "text-disabled");
  }

  &:active {
    background-color: map-get($button-background-active-color, "text-disabled");
    color: map-get($button-text-active-color, "text-disabled");
    border-color: map-get($button-border-active-color, "text-disabled");
  }
}

@mixin button-reset() {
  -webkit-appearance: none;
  -moz-appearance: none;

  display: inline-block;
  border: 0;
  padding: 1.5rem;
  background-color: transparent;
  text-align: left;
  cursor: pointer;
}

@mixin button-text-tiny($type: "text-tiny") {
  background-color: map-get($button-background-color, $type);
  color: map-get($button-text-color, $type);
  border-color: map-get($button-border-color, $type);
  box-shadow: none;
  font-weight: bold;
  font-size: 1rem;
  padding: 0;

  &:hover {
    background-color: map-get($button-background-hover-color, $type);
    color: map-get($button-text-hover-color, $type);
    border-color: map-get($button-border-hover-color, $type);
  }

  &:focus {
    background-color: map-get($button-background-focus-color, $type);
    color: map-get($button-text-focus-color, $type);
    border-color: map-get($button-border-focus-color, $type);
  }

  &:active {
    background-color: map-get($button-background-active-color, $type);
    color: map-get($button-text-active-color, $type);
    border-color: map-get($button-border-active-color, $type);
  }
}
